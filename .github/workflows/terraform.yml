name: "WebProApIaaC"
on:
    workflow_dispatch:
      inputs:
        action:
          description: 'Action to perform'
          required: true
          default: 'plan'
          type: choice
          options:
            - plan
            - apply
            - destroy

env:
    AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
    AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    TF_VAR_ssh_Public_Key: ${{ secrets.SSH_PUBLIC_KEY }}
    TF_VAR_myIp: ${{ secrets.MY_IP }}
    BUCKET_TF_STATE: ${{ secrets.BUCKET_TF_STATE }}

jobs:
    terraform:
        name: "Apply terraform code changes"
        runs-on: ubuntu-latest
        defaults:
            run:
                shell: bash
                working-directory: ./terraform
        steps:
            - name: Checkout code
              uses: actions/checkout@v4
            
            - name: Setup Terraform on the runner
              uses: hashicorp/setup-terraform@v3
              with:
                  terraform_version: 1.10.5
              
            - name: Terraform Init
              id: init
              run: terraform init -backend-config="bucket=$BUCKET_TF_STATE"

            - name: Terraform format check
              id: fmtdiff
              run: terraform fmt -diff

            - name: Terraform format check
              id: fmt
              run: terraform fmt -check
            
            - name : Terraform validate
              id: validate
              run: terraform validate

            - name: Terraform Plan
              id: plan
              if: ${{ github.event.inputs.action == 'plan' || github.event.inputs.action == 'apply' }}
              run: terraform plan -out=tfplan -no-color
              continue-on-error: true

            - name: Terraform plan status
              if: steps.plan.outcome == 'failure'
              run: exit 1

            - name: Terraform Apply
              id: apply
              if: ${{ github.event.inputs.action == 'apply' }}
              run: terraform apply -auto-approve -input=false -parallelism=1 tfplan
            
            - name: Terraform Destroy
              id: destroy
              if: ${{ github.event.inputs.action == 'destroy' }}
              run: terraform destroy -auto-approve -input=false -parallelism=1